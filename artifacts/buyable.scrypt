
contract Buyable {
  bytes offer;
  @state int price;
  @state Ripemd160 pubKeyHash;
  public function buy(Ripemd160 pubKeyHash, SigHashPreimage __scrypt_ts_txPreimage) {
    require(Tx.checkPreimageSigHashType(__scrypt_ts_txPreimage, SigHashType(b'41')));
    require(this.price > 0);
    Ripemd160 seller = this.pubKeyHash;
    this.pubKeyHash = pubKeyHash;
    bytes output = Utils.buildOutput(Utils.buildPublicKeyHashScript(seller), this.price);
    require(SigHash.hashOutputs(__scrypt_ts_txPreimage) == hash256(output));
  }
  public function unlock(Sig signature, PubKey pubkey, SigHashPreimage __scrypt_ts_txPreimage) {
    require(Tx.checkPreimageSigHashType(__scrypt_ts_txPreimage, SigHashType(b'41')));
    require(hash160(pubkey) == this.pubKeyHash);
    require(checkSig(signature, pubkey));
  }
    function buildStateOutput(int amount): bytes {
      bytes script = this.getStateScript();
      return Utils.buildOutput(script, amount);
    }
}